Parsing tea_accelerator_mod.sv
Parsing tb_formal_fixed_operation_count.sv
Converting
Type-checking Verilog::tea_accelerator
Making tea_accelerator.o_axis_data_m a wire
file tea_accelerator_mod.sv line 25: Making tea_accelerator.v1_next a wire
file tea_accelerator_mod.sv line 25: Making tea_accelerator.v0_next a wire
file tea_accelerator_mod.sv line 23: Making tea_accelerator.next_state a wire
Type-checking Verilog::tb_formal_fixed_operation_count
file tb_formal_fixed_operation_count.sv line 15: Making tb_formal_fixed_operation_count.o_axis_ready_s a wire
file tb_formal_fixed_operation_count.sv line 17: Making tb_formal_fixed_operation_count.o_axis_valid_m a wire
file tb_formal_fixed_operation_count.sv line 19: Making tb_formal_fixed_operation_count.o_axis_data_m a wire
Generating Decision Problem
Using MiniSAT 2.2.1 with simplifier
Properties
Solving with propositional reduction
SAT checker: instance is UNSATISFIABLE
UNSAT: No path found within bound

** Results:
[tb_formal_fixed_operation_count.assert.1] always tb_formal_fixed_operation_count.always_32_rounds: [32mPROVED up to bound 50[0m
[tb_formal_fixed_operation_count.assert.2] always tb_formal_fixed_operation_count.always_increments: [32mPROVED up to bound 50[0m
